package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var __0001_create_wallet_relations_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x4d\xcb\x82\x40\x1c\x04\xf0\xfb\x7e\x8a\xc1\x93\xf2\xac\x0f\x7a\x5b\x90\x0e\x82\xff\x48\xf0\x25\x76\xdd\x3a\xca\x16\x9b\x44\x9b\x8a\x08\xd2\xb7\x0f\x8a\xc2\x63\xb7\x99\x61\x0e\xbf\x30\xc4\xdf\xfd\xda\x4d\x66\xb6\xd0\x23\xcb\x2b\x45\xb2\x41\x5e\x35\x35\x16\xe3\x9c\x9d\xe1\x33\x00\xb8\xdc\xda\x61\xea\x5a\x67\xc0\x5f\x7d\x7e\x8c\xf6\x9d\x4e\xc6\x99\xfe\x6c\x59\x80\x43\x5a\x68\x52\xf0\x23\x0e\x4f\xe9\x3d\xc9\x36\xcd\xca\xbc\xf2\x38\xc4\xbf\x10\x22\xe0\xf0\x63\x0e\x4f\x2b\x92\xdf\x2d\x61\x6c\x4d\xc8\x86\xa5\x67\x19\x15\xd4\x10\xb6\xb2\x2e\x3f\x88\xe3\x8e\x24\xad\x10\x1b\x44\xc9\x6f\xbf\x38\x79\x06\x00\x00\xff\xff\xfb\xa4\x17\xe1\xe3\x00\x00\x00")

func _0001_create_wallet_relations_sql() ([]byte, error) {
	return bindata_read(
		__0001_create_wallet_relations_sql,
		"0001_create_wallet_relations.sql",
	)
}

var __0002_create_ext_account_relations_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x51\x6b\xb3\x30\x14\x86\xef\xf3\x2b\x0e\x5e\x59\xbe\x14\x34\x46\x63\x28\xdf\x85\x33\x29\x2b\x74\x2d\xb4\xb6\xbb\x0c\x31\xa6\x5b\xa9\xd5\xa1\x29\x76\xff\x7e\x6c\xae\x6c\x83\xdd\x2c\x57\x39\x0f\xef\x79\x0f\x3c\xd3\x29\xfc\x3b\x1f\x9f\x3a\xed\x2c\xec\x5e\xd0\x62\xb5\x95\x9b\x02\x16\xab\x62\x0d\xf6\xea\x94\x36\xa6\xbd\x34\x0e\x7c\x04\x00\x70\x38\xa9\x41\xd7\xb5\x75\xf8\x36\xbe\x67\xcc\xa5\xeb\x6c\x63\x5e\x47\xf8\xb9\xa1\x74\xd5\x8d\xe0\xd8\xf4\xb6\x73\xca\x1d\xcf\x76\x04\xbd\xd3\xee\xd2\x8f\xff\x5a\x3b\xdb\x3b\x65\x9e\xad\x39\xd9\x4a\x95\x75\x6b\x4e\x68\x02\xfb\x6c\xb9\x93\x5b\xf0\x43\x0c\x21\x06\x2f\xb8\x72\x1b\x1b\x71\xc7\x28\x8d\x89\x88\x72\x4a\x23\x42\xe7\x9c\x05\x34\xe1\x34\xa3\x89\xe6\x24\xa9\x22\x92\x32\xea\x61\x68\xda\xc1\x9f\x60\xf0\xb2\xbc\x58\xec\xa5\x87\x21\x98\x8c\xb7\x3e\x9e\x4f\x6e\x95\xa4\x14\x21\x0b\xe6\x5c\x94\xb9\x4c\x72\x96\x96\x39\xd7\xe9\xe1\x10\x57\x3a\xd6\x94\xb0\x88\xc4\xa9\xd4\x99\x10\xbf\x57\xce\x10\xfa\xae\x4e\xb4\x43\x83\x84\x5c\xca\x42\xc2\x7c\xb3\x7e\xf8\x21\xef\xf1\x5e\x6e\xe4\x97\x3c\xf8\x0f\xe1\xec\x0f\x61\x32\x43\x6f\x01\x00\x00\xff\xff\xba\x6e\x6b\x2e\xa6\x01\x00\x00")

func _0002_create_ext_account_relations_sql() ([]byte, error) {
	return bindata_read(
		__0002_create_ext_account_relations_sql,
		"0002_create_ext_account_relations.sql",
	)
}

var __0003_create_withdrawfee_relations_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xce\x31\x6b\x84\x30\x18\x87\xf1\x3d\x9f\xe2\x8f\x93\xd2\x58\x6a\x57\xe9\x20\x35\x05\xc1\x2a\x68\x74\x0d\x62\x5f\x6b\x38\x8c\x47\x8c\xe4\xee\xdb\xdf\xe0\x0d\x77\xb7\x3d\x3c\xd3\x2f\x8e\xf1\xb6\xe8\x7f\x3b\x38\x42\x77\x66\x45\xd5\x8a\x46\xa2\xa8\x64\x0d\xaf\xdd\xfc\x67\x07\xaf\x26\x22\x84\x0c\x00\xa6\x93\xa2\x8b\x53\xe3\x6e\x2d\x99\xf1\xca\x8f\x49\x74\x84\x36\x1b\x59\xa7\x9c\x5e\xee\x63\x73\x83\xdb\x37\x16\xa1\xcf\xca\x4e\xb4\x08\x13\x8e\x8f\xf7\x4f\x0e\xb3\xfa\x30\xe2\x08\xb2\x6f\x59\xf4\x22\x88\x52\xc6\x1e\x21\xf9\xea\x0d\xcb\x45\x29\xa4\xc0\x4f\x53\xff\x3e\x53\xfc\x4c\x96\x5e\x29\xf8\x42\x92\xde\x02\x00\x00\xff\xff\xec\x57\x90\x2c\xcd\x00\x00\x00")

func _0003_create_withdrawfee_relations_sql() ([]byte, error) {
	return bindata_read(
		__0003_create_withdrawfee_relations_sql,
		"0003_create_withdrawfee_relations.sql",
	)
}

var __002_create_internal_tx_relations_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\xe2\x42\x16\x70\xc9\x2f\xcf\xe3\x02\x04\x00\x00\xff\xff\x86\x75\x85\x38\x22\x00\x00\x00")

func _002_create_internal_tx_relations_sql() ([]byte, error) {
	return bindata_read(
		__002_create_internal_tx_relations_sql,
		"002_create_internal_tx_relations.sql",
	)
}

var __005_create_withdraw_relations_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x41\x6f\xa3\x38\x14\x3e\x2f\xbf\xe2\x1d\x2a\x35\xd1\xa6\x87\x99\x53\xa5\xa8\x07\x86\x3a\x19\xb4\xc4\x20\x6c\x76\x27\x27\xcb\x0b\xee\x04\x2d\x25\xa9\xe3\x90\xf4\xdf\xaf\x80\x98\x18\x30\x9d\x6a\x72\x49\xfb\xde\xe7\xe7\xf7\xbd\xef\xf3\x53\x1e\x1e\xe0\xcf\xd7\xfc\xa7\xe4\x4a\x40\x72\x70\x1c\x2f\x46\x2e\x45\x40\xb7\x11\x02\xfa\x83\x11\xea\xd2\x84\x80\x4b\x00\xe1\x64\x03\x33\x07\x00\xe0\x1e\x87\x94\x11\x84\x29\xa3\x21\x8b\xc8\xfd\xa2\x8d\x46\x08\x3f\xfb\x78\xad\xff\x25\x89\xe7\x21\x42\x56\x49\x70\xef\xcc\x97\xb7\xca\xee\xb7\x00\x81\xbf\x02\x1c\x52\x40\x3f\x7c\x42\x09\x9c\x73\xb5\xcb\x24\x3f\x5f\xeb\xe7\x19\x10\x14\xfb\x6e\x00\x51\xec\x6f\xdc\x78\x0b\x7f\xa1\x6d\x5b\xf5\xe5\x3f\x26\x2e\x8a\xf1\x34\xdd\x9f\x4a\xc5\x8e\xa2\xcc\x84\x04\x1f\x53\x88\xd1\x0a\xc5\x08\x7b\x88\x00\x18\x90\x59\x9e\xcd\x9b\xab\x70\x12\x04\xd6\x1a\x52\xa4\x22\xaf\x7e\xb7\x4a\x7a\x92\x52\x94\xe9\xbb\xf5\xb4\x4e\x5a\x8e\x57\xbc\x38\x09\xc0\xc9\x06\xc5\xbe\x37\xfb\xfa\xb8\xf8\xf2\x68\xb9\x41\x0f\x86\xbd\x08\x31\xba\x41\x27\x2d\xd5\xd5\xa5\x1e\x8d\x62\x2a\x7f\x15\x40\xfd\x0d\x22\xd4\xdd\x44\x16\x90\xe2\x4a\x7f\x9f\x8e\xe3\x3c\x3f\x1c\xe4\xbe\x12\xd9\xa0\x50\xd7\xdf\xdb\x49\xc8\x77\x96\x67\xec\xc0\xdf\x5f\x45\x23\x88\xac\xf2\xb4\xed\xb5\xab\xb2\xe3\xc7\x1d\x54\x5c\xa6\x3b\x2e\x61\xf6\xe5\xeb\xe3\xdc\x34\x44\x18\x43\x8c\xa2\xc0\xf5\x10\xac\x12\xec\x51\x3f\xc4\x1d\x35\x76\x3c\xa5\xa9\x38\x1e\x61\xa6\x23\x7e\x56\xd7\x5e\x80\xba\x7c\x37\xaa\x36\x45\xeb\xa0\x7b\x90\x55\x46\x7b\xcd\xce\x21\x46\x34\x89\x31\x81\x6a\x9f\x67\x4d\x4f\x81\x8b\xd7\x89\xbb\x46\x70\x28\x0e\x3f\x8f\x6f\x85\xe3\x12\xb8\xbb\x73\xbe\xa1\xb5\x8f\x1b\x40\x12\x3d\xd7\xad\xe9\x4b\x9b\x18\x41\xf4\x0f\x3d\xb2\xa7\x9e\xbd\x5b\xa2\xd7\xcf\x68\x6a\x4f\x66\x5b\x43\x68\x33\x9a\xa7\x2b\x9b\x26\xf7\xcf\x77\x14\x23\x13\x55\x3f\x87\x27\x30\xf8\x2f\x1d\x84\x9f\x97\xce\xdd\xdd\xd2\xf9\xdc\x10\xa5\x78\x63\x79\x99\xab\xeb\xf3\xaa\xd8\xe4\x2b\x5a\xd8\x01\xe6\x13\x19\x40\x4c\xff\xeb\x94\xcd\xdb\xc6\xb1\xa1\xa9\x75\xca\x6e\x5a\x33\xdb\x73\xab\x59\x91\x17\x85\x98\xe0\x71\xcd\xd9\x28\x68\xd3\xa6\x5c\x41\xe4\x6e\x37\xf5\x46\xf3\x5c\x8a\xd6\x61\xbc\xed\x71\xa9\x3b\x65\x79\x99\x16\xa7\x4c\x64\x03\x62\xce\xcd\x5f\x3e\xa6\x1f\xd9\xcb\xc9\x44\x5a\x70\x29\xe0\x9c\x49\x96\x37\x3e\x5e\x3a\x86\xe9\x7c\x4c\x50\x4c\xeb\x70\x38\xdc\x88\x93\xab\x6f\x31\x95\xd6\x7c\x47\x00\x2d\xd8\x2d\xd1\x50\xec\xe1\x4c\x85\x6e\x09\x53\x9f\x7e\x54\x71\x35\x6f\x02\x7f\xbb\x41\x82\x88\xd1\xb4\xbe\x62\xc2\x72\x8b\x5f\x02\xc7\x3c\x86\xc8\x31\xa1\x0e\x31\x60\x66\x9e\xb4\x53\xec\x10\x76\xae\xbd\xb4\xe2\xca\x4c\xcc\x5b\x17\xf8\x78\x0d\xad\xb6\xe1\x55\xe7\xfa\x95\xc2\x40\xde\xbc\x54\x42\x96\xbc\x60\xea\xd2\x57\xb8\xe7\xe4\x85\x25\x33\x9e\x87\xe1\xe2\x9e\x2a\xdd\x1d\x52\xbc\x4c\x8a\x5d\xf3\xab\x9b\xf8\x84\x7c\x13\xad\x59\x20\x1f\x68\x66\x6d\xf6\xfa\x69\xc7\x35\x25\x63\xef\x0d\xfe\x42\xb1\x96\x8d\x1e\x7c\xbb\xcc\xbb\x13\x6d\x93\x7a\xa5\x77\xe1\x7f\x79\xc1\xcb\xb4\x5e\xd7\xfa\xaf\x07\xeb\xd5\x1f\x2d\xe9\xf1\x9c\x74\x23\xf5\x57\x6b\x90\x9b\x2b\x6e\x5b\xdc\xfc\x11\xf6\xbc\x3f\x97\xff\x07\x00\x00\xff\xff\x79\x56\xd0\x22\x95\x09\x00\x00")

func _005_create_withdraw_relations_sql() ([]byte, error) {
	return bindata_read(
		__005_create_withdraw_relations_sql,
		"005_create_withdraw_relations.sql",
	)
}

var __006_create_topup_relations_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x4d\x6f\xa3\x3c\x10\xbe\xfb\x57\xcc\x21\x87\x44\x4d\x0f\xed\xa9\x52\xd4\x83\x4b\xa7\xa9\xf5\x12\x93\xd7\x98\xee\xe6\x84\xbc\xe0\xb6\x68\x09\xa1\x2e\x49\xdb\x7f\xbf\x02\x02\x35\x01\xb6\xab\xdd\x5c\x12\x7b\x9e\xf1\x3c\x1f\x23\xe5\xfc\x1c\xce\xb6\xc9\x93\x51\x85\x86\x20\x27\x8e\x40\x2a\x11\x24\xbd\x71\x11\xd8\x1d\x70\x4f\x02\x7e\x67\xbe\xf4\xa1\xd8\xe5\xfb\x1c\xa6\x04\xca\x4f\x12\x83\x8f\x82\x51\x17\xd6\x82\xad\xa8\xd8\xc0\x7f\xb8\x99\xd7\xb5\xc7\x9f\xa1\x7e\x2f\x42\x15\x45\xbb\x7d\x56\x84\xaf\x3a\x8b\xb5\x01\xc6\x25\x08\xbc\x43\x81\xdc\x41\x1f\xc0\x82\x4c\x93\x78\x56\x4d\xe2\x81\xeb\x0e\x3f\x62\x74\xa4\x93\xc3\x5f\x3f\x13\xed\x8d\xd1\x59\xf4\x71\xda\x6e\xd7\x86\xda\x0f\x2a\xdd\x6b\xe0\xc1\x0a\x05\x73\xa6\x97\x57\xf3\x8b\xab\x1e\xa6\x78\x0f\x55\x9e\x9b\xdd\x41\xc7\x61\x91\x6c\x35\x48\xb6\x42\x5f\xd2\xd5\xfa\x13\xf0\xac\x5e\x9f\xe1\xa0\x4c\xf4\xac\x0c\x4c\x2f\x2e\xad\x57\x20\xe0\xec\xff\x00\xc9\x6c\x41\x1a\xf7\x3d\x01\x02\xd7\x2e\x75\x10\xee\x02\xee\x48\xe6\xf1\xda\xfd\xd0\xe8\x97\x72\x58\xfa\x71\xcc\xe1\x10\x8e\x9a\x3d\x1f\x06\xd8\x46\x9e\x40\x6c\x93\x9a\xd2\x90\x01\x4d\xed\x2b\xe1\x15\xa2\x52\xfe\x40\x85\x73\x4f\x45\x25\xdc\x1a\xfa\xa6\xd2\x54\x8f\x70\x3e\xd6\x86\xe8\xe6\xea\x63\xab\xb3\x22\x8c\x54\x01\x6b\xba\x59\x21\x97\xa1\x43\x25\x2e\x3d\xb1\x21\x33\x10\x28\x03\xc1\xfd\xb2\xa3\x6a\x70\x29\x5f\x06\x74\x89\x90\xa7\xf9\xd3\xeb\x4b\x4a\xa8\x0f\x93\x09\x21\xb1\x8e\x52\x65\xf4\xd1\xd9\x24\x2e\x1b\x16\x84\xdc\xe0\x92\x71\x52\x75\x32\xee\xa3\x90\xe5\xbd\xd7\xdd\xfe\xb1\x25\x9f\x8f\x95\x1b\x19\x3d\x40\xe3\xf9\x67\xa1\x72\xfc\xf3\x78\x6a\x72\xa7\x52\x99\x3b\xab\x6e\x1e\xa8\x1b\xa0\x6f\x11\x6c\x9e\x1b\xd9\x90\xf9\x97\xc0\x3e\xe7\x53\x64\x9f\x7c\x8b\x38\x51\xd1\xde\x8f\xcb\xb1\x21\xa5\x2e\xbb\x30\xab\x33\x65\x7c\x09\x75\x4e\x5e\x9b\xda\x82\xf4\xb3\x4a\xb2\x42\x9b\x4c\xa5\x61\xf1\xde\x4d\xac\xb3\x70\xf3\x81\x4a\x5f\xb3\xb5\x6c\x1d\xeb\xdb\x19\x46\x3f\x8e\x87\x97\x6c\x75\x49\xe2\x0f\x22\x1a\xa1\x36\x00\xf9\x4d\x2e\x83\x64\x1b\x2e\x47\xc3\xfe\x21\xac\x5a\x46\xe3\x78\xb0\xbe\xa5\x12\xdb\xae\x9a\x5d\x75\xf4\x51\xb6\xd7\x3f\x54\xaa\xb2\x48\xc3\x75\xfb\xeb\xac\x99\x58\x61\xbe\xdd\xa3\xc0\xce\xe8\x24\x86\xeb\x41\xc1\xcd\xf4\xf2\xab\x5e\x08\x7b\x0b\x90\xdf\x2e\xc8\x64\xb2\x20\xc4\xfe\x4b\xbb\xdd\xbd\x65\xbf\x02\x00\x00\xff\xff\x82\x1b\xcc\x4d\xe3\x06\x00\x00")

func _006_create_topup_relations_sql() ([]byte, error) {
	return bindata_read(
		__006_create_topup_relations_sql,
		"006_create_topup_relations.sql",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"0001_create_wallet_relations.sql": _0001_create_wallet_relations_sql,
	"0002_create_ext_account_relations.sql": _0002_create_ext_account_relations_sql,
	"0003_create_withdrawfee_relations.sql": _0003_create_withdrawfee_relations_sql,
	"002_create_internal_tx_relations.sql": _002_create_internal_tx_relations_sql,
	"005_create_withdraw_relations.sql": _005_create_withdraw_relations_sql,
	"006_create_topup_relations.sql": _006_create_topup_relations_sql,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"0001_create_wallet_relations.sql": &_bintree_t{_0001_create_wallet_relations_sql, map[string]*_bintree_t{
	}},
	"0002_create_ext_account_relations.sql": &_bintree_t{_0002_create_ext_account_relations_sql, map[string]*_bintree_t{
	}},
	"0003_create_withdrawfee_relations.sql": &_bintree_t{_0003_create_withdrawfee_relations_sql, map[string]*_bintree_t{
	}},
	"002_create_internal_tx_relations.sql": &_bintree_t{_002_create_internal_tx_relations_sql, map[string]*_bintree_t{
	}},
	"005_create_withdraw_relations.sql": &_bintree_t{_005_create_withdraw_relations_sql, map[string]*_bintree_t{
	}},
	"006_create_topup_relations.sql": &_bintree_t{_006_create_topup_relations_sql, map[string]*_bintree_t{
	}},
}}
