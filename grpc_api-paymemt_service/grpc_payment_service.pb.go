// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc_payment_service.proto

package grpc_api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TxReqType_PaymentClient int32

const (
	TxReqType_TEST      TxReqType_PaymentClient = 0
	TxReqType_REGCOIN   TxReqType_PaymentClient = 1
	TxReqType_AIRDROP   TxReqType_PaymentClient = 2
	TxReqType_M2MWALLET TxReqType_PaymentClient = 3
)

var TxReqType_PaymentClient_name = map[int32]string{
	0: "TEST",
	1: "REGCOIN",
	2: "AIRDROP",
	3: "M2MWALLET",
}

var TxReqType_PaymentClient_value = map[string]int32{
	"TEST":      0,
	"REGCOIN":   1,
	"AIRDROP":   2,
	"M2MWALLET": 3,
}

func (x TxReqType_PaymentClient) String() string {
	return proto.EnumName(TxReqType_PaymentClient_name, int32(x))
}

func (TxReqType_PaymentClient) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3346cb688bd87792, []int{0, 0}
}

type TxReqType_TokenName int32

const (
	TxReqType_MXC      TxReqType_TokenName = 0
	TxReqType_FAKEMXC1 TxReqType_TokenName = 1
	TxReqType_FAKEMXC2 TxReqType_TokenName = 2
)

var TxReqType_TokenName_name = map[int32]string{
	0: "MXC",
	1: "FAKEMXC1",
	2: "FAKEMXC2",
}

var TxReqType_TokenName_value = map[string]int32{
	"MXC":      0,
	"FAKEMXC1": 1,
	"FAKEMXC2": 2,
}

func (x TxReqType_TokenName) String() string {
	return proto.EnumName(TxReqType_TokenName_name, int32(x))
}

func (TxReqType_TokenName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3346cb688bd87792, []int{0, 1}
}

type CheckTxStatusReplyType_TxPaymentStatus int32

const (
	CheckTxStatusReplyType_TOBE_SENT    CheckTxStatusReplyType_TxPaymentStatus = 0
	CheckTxStatusReplyType_TOBE_CHECKED CheckTxStatusReplyType_TxPaymentStatus = 1
	CheckTxStatusReplyType_SUCCESSFUL   CheckTxStatusReplyType_TxPaymentStatus = 2
)

var CheckTxStatusReplyType_TxPaymentStatus_name = map[int32]string{
	0: "TOBE_SENT",
	1: "TOBE_CHECKED",
	2: "SUCCESSFUL",
}

var CheckTxStatusReplyType_TxPaymentStatus_value = map[string]int32{
	"TOBE_SENT":    0,
	"TOBE_CHECKED": 1,
	"SUCCESSFUL":   2,
}

func (x CheckTxStatusReplyType_TxPaymentStatus) String() string {
	return proto.EnumName(CheckTxStatusReplyType_TxPaymentStatus_name, int32(x))
}

func (CheckTxStatusReplyType_TxPaymentStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3346cb688bd87792, []int{3, 0}
}

type TxReqType struct {
	PaymentClientEnum    TxReqType_PaymentClient `protobuf:"varint,1,opt,name=PaymentClientEnum,proto3,enum=grpc_api.TxReqType_PaymentClient" json:"PaymentClientEnum,omitempty"`
	ReqIdClient          int64                   `protobuf:"varint,2,opt,name=ReqIdClient,proto3" json:"ReqIdClient,omitempty"`
	ReceiverAdr          string                  `protobuf:"bytes,3,opt,name=ReceiverAdr,proto3" json:"ReceiverAdr,omitempty"`
	Amount               string                  `protobuf:"bytes,4,opt,name=Amount,proto3" json:"Amount,omitempty"`
	TokenNameEnum        TxReqType_TokenName     `protobuf:"varint,5,opt,name=TokenNameEnum,proto3,enum=grpc_api.TxReqType_TokenName" json:"TokenNameEnum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TxReqType) Reset()         { *m = TxReqType{} }
func (m *TxReqType) String() string { return proto.CompactTextString(m) }
func (*TxReqType) ProtoMessage()    {}
func (*TxReqType) Descriptor() ([]byte, []int) {
	return fileDescriptor_3346cb688bd87792, []int{0}
}

func (m *TxReqType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxReqType.Unmarshal(m, b)
}
func (m *TxReqType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxReqType.Marshal(b, m, deterministic)
}
func (m *TxReqType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxReqType.Merge(m, src)
}
func (m *TxReqType) XXX_Size() int {
	return xxx_messageInfo_TxReqType.Size(m)
}
func (m *TxReqType) XXX_DiscardUnknown() {
	xxx_messageInfo_TxReqType.DiscardUnknown(m)
}

var xxx_messageInfo_TxReqType proto.InternalMessageInfo

func (m *TxReqType) GetPaymentClientEnum() TxReqType_PaymentClient {
	if m != nil {
		return m.PaymentClientEnum
	}
	return TxReqType_TEST
}

func (m *TxReqType) GetReqIdClient() int64 {
	if m != nil {
		return m.ReqIdClient
	}
	return 0
}

func (m *TxReqType) GetReceiverAdr() string {
	if m != nil {
		return m.ReceiverAdr
	}
	return ""
}

func (m *TxReqType) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *TxReqType) GetTokenNameEnum() TxReqType_TokenName {
	if m != nil {
		return m.TokenNameEnum
	}
	return TxReqType_MXC
}

type TxReqReplyType struct {
	Error                string   `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	ReqQueryRef          int64    `protobuf:"varint,2,opt,name=ReqQueryRef,proto3" json:"ReqQueryRef,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxReqReplyType) Reset()         { *m = TxReqReplyType{} }
func (m *TxReqReplyType) String() string { return proto.CompactTextString(m) }
func (*TxReqReplyType) ProtoMessage()    {}
func (*TxReqReplyType) Descriptor() ([]byte, []int) {
	return fileDescriptor_3346cb688bd87792, []int{1}
}

func (m *TxReqReplyType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxReqReplyType.Unmarshal(m, b)
}
func (m *TxReqReplyType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxReqReplyType.Marshal(b, m, deterministic)
}
func (m *TxReqReplyType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxReqReplyType.Merge(m, src)
}
func (m *TxReqReplyType) XXX_Size() int {
	return xxx_messageInfo_TxReqReplyType.Size(m)
}
func (m *TxReqReplyType) XXX_DiscardUnknown() {
	xxx_messageInfo_TxReqReplyType.DiscardUnknown(m)
}

var xxx_messageInfo_TxReqReplyType proto.InternalMessageInfo

func (m *TxReqReplyType) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *TxReqReplyType) GetReqQueryRef() int64 {
	if m != nil {
		return m.ReqQueryRef
	}
	return 0
}

type CheckTxStatusType struct {
	ReqQueryRef          int64    `protobuf:"varint,1,opt,name=ReqQueryRef,proto3" json:"ReqQueryRef,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckTxStatusType) Reset()         { *m = CheckTxStatusType{} }
func (m *CheckTxStatusType) String() string { return proto.CompactTextString(m) }
func (*CheckTxStatusType) ProtoMessage()    {}
func (*CheckTxStatusType) Descriptor() ([]byte, []int) {
	return fileDescriptor_3346cb688bd87792, []int{2}
}

func (m *CheckTxStatusType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckTxStatusType.Unmarshal(m, b)
}
func (m *CheckTxStatusType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckTxStatusType.Marshal(b, m, deterministic)
}
func (m *CheckTxStatusType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckTxStatusType.Merge(m, src)
}
func (m *CheckTxStatusType) XXX_Size() int {
	return xxx_messageInfo_CheckTxStatusType.Size(m)
}
func (m *CheckTxStatusType) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckTxStatusType.DiscardUnknown(m)
}

var xxx_messageInfo_CheckTxStatusType proto.InternalMessageInfo

func (m *CheckTxStatusType) GetReqQueryRef() int64 {
	if m != nil {
		return m.ReqQueryRef
	}
	return 0
}

type CheckTxStatusReplyType struct {
	Error                    string                                 `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	TxPaymentStatusEnum      CheckTxStatusReplyType_TxPaymentStatus `protobuf:"varint,2,opt,name=TxPaymentStatusEnum,proto3,enum=grpc_api.CheckTxStatusReplyType_TxPaymentStatus" json:"TxPaymentStatusEnum,omitempty"`
	TxHash                   string                                 `protobuf:"bytes,3,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
	TxSentTime               string                                 `protobuf:"bytes,4,opt,name=TxSentTime,proto3" json:"TxSentTime,omitempty"`
	TxNetworkStatusCheckTime string                                 `protobuf:"bytes,5,opt,name=TxNetworkStatusCheckTime,proto3" json:"TxNetworkStatusCheckTime,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                               `json:"-"`
	XXX_unrecognized         []byte                                 `json:"-"`
	XXX_sizecache            int32                                  `json:"-"`
}

func (m *CheckTxStatusReplyType) Reset()         { *m = CheckTxStatusReplyType{} }
func (m *CheckTxStatusReplyType) String() string { return proto.CompactTextString(m) }
func (*CheckTxStatusReplyType) ProtoMessage()    {}
func (*CheckTxStatusReplyType) Descriptor() ([]byte, []int) {
	return fileDescriptor_3346cb688bd87792, []int{3}
}

func (m *CheckTxStatusReplyType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckTxStatusReplyType.Unmarshal(m, b)
}
func (m *CheckTxStatusReplyType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckTxStatusReplyType.Marshal(b, m, deterministic)
}
func (m *CheckTxStatusReplyType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckTxStatusReplyType.Merge(m, src)
}
func (m *CheckTxStatusReplyType) XXX_Size() int {
	return xxx_messageInfo_CheckTxStatusReplyType.Size(m)
}
func (m *CheckTxStatusReplyType) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckTxStatusReplyType.DiscardUnknown(m)
}

var xxx_messageInfo_CheckTxStatusReplyType proto.InternalMessageInfo

func (m *CheckTxStatusReplyType) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *CheckTxStatusReplyType) GetTxPaymentStatusEnum() CheckTxStatusReplyType_TxPaymentStatus {
	if m != nil {
		return m.TxPaymentStatusEnum
	}
	return CheckTxStatusReplyType_TOBE_SENT
}

func (m *CheckTxStatusReplyType) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *CheckTxStatusReplyType) GetTxSentTime() string {
	if m != nil {
		return m.TxSentTime
	}
	return ""
}

func (m *CheckTxStatusReplyType) GetTxNetworkStatusCheckTime() string {
	if m != nil {
		return m.TxNetworkStatusCheckTime
	}
	return ""
}

func init() {
	proto.RegisterEnum("grpc_api.TxReqType_PaymentClient", TxReqType_PaymentClient_name, TxReqType_PaymentClient_value)
	proto.RegisterEnum("grpc_api.TxReqType_TokenName", TxReqType_TokenName_name, TxReqType_TokenName_value)
	proto.RegisterEnum("grpc_api.CheckTxStatusReplyType_TxPaymentStatus", CheckTxStatusReplyType_TxPaymentStatus_name, CheckTxStatusReplyType_TxPaymentStatus_value)
	proto.RegisterType((*TxReqType)(nil), "grpc_api.TxReqType")
	proto.RegisterType((*TxReqReplyType)(nil), "grpc_api.TxReqReplyType")
	proto.RegisterType((*CheckTxStatusType)(nil), "grpc_api.CheckTxStatusType")
	proto.RegisterType((*CheckTxStatusReplyType)(nil), "grpc_api.CheckTxStatusReplyType")
}

func init() { proto.RegisterFile("grpc_payment_service.proto", fileDescriptor_3346cb688bd87792) }

var fileDescriptor_3346cb688bd87792 = []byte{
	// 508 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xcf, 0x4e, 0xdb, 0x40,
	0x10, 0xc6, 0x63, 0x07, 0x48, 0x32, 0x90, 0x74, 0x59, 0x2a, 0x64, 0x51, 0xb5, 0x4a, 0x7d, 0xca,
	0x29, 0xa2, 0xa9, 0x7a, 0xa9, 0xd4, 0x83, 0xb3, 0x2c, 0x4d, 0x44, 0xfe, 0x75, 0xbd, 0xa8, 0xdc,
	0x22, 0x13, 0xb6, 0xc5, 0x0a, 0xfe, 0xc3, 0xc6, 0xa1, 0xce, 0xab, 0xf4, 0x91, 0xfa, 0x3a, 0x7d,
	0x81, 0xca, 0x6b, 0x93, 0xda, 0x21, 0x88, 0xe3, 0xcc, 0xce, 0xf7, 0xe9, 0xd3, 0x6f, 0x66, 0xe1,
	0xe4, 0xa7, 0x0c, 0x67, 0xd3, 0xd0, 0x59, 0x79, 0xc2, 0x8f, 0xa6, 0x0b, 0x21, 0x1f, 0xdc, 0x99,
	0x68, 0x87, 0x32, 0x88, 0x02, 0x5c, 0x55, 0x6f, 0x4e, 0xe8, 0x9a, 0x7f, 0x75, 0xa8, 0xf1, 0x98,
	0x89, 0x7b, 0xbe, 0x0a, 0x05, 0x1e, 0xc3, 0xe1, 0x24, 0x15, 0x90, 0x3b, 0x57, 0xf8, 0x11, 0xf5,
	0x97, 0x9e, 0xa1, 0x35, 0xb5, 0x56, 0xa3, 0xf3, 0xbe, 0xfd, 0xa8, 0x69, 0xaf, 0xe7, 0xdb, 0x85,
	0x61, 0xf6, 0x54, 0x8b, 0x9b, 0xb0, 0xcf, 0xc4, 0x7d, 0xff, 0x26, 0x6d, 0x19, 0x7a, 0x53, 0x6b,
	0x95, 0x59, 0xbe, 0x95, 0x4e, 0xcc, 0x84, 0xfb, 0x20, 0xa4, 0x75, 0x23, 0x8d, 0x72, 0x53, 0x6b,
	0xd5, 0x58, 0xbe, 0x85, 0x8f, 0x61, 0xcf, 0xf2, 0x82, 0xa5, 0x1f, 0x19, 0x3b, 0xea, 0x31, 0xab,
	0x30, 0x81, 0x3a, 0x0f, 0xe6, 0xc2, 0x1f, 0x39, 0x9e, 0x50, 0x41, 0x77, 0x55, 0xd0, 0xb7, 0xdb,
	0x82, 0xae, 0x07, 0x59, 0x51, 0x63, 0x76, 0xa1, 0x5e, 0x48, 0x8d, 0xab, 0xb0, 0xc3, 0xa9, 0xcd,
	0x51, 0x09, 0xef, 0x43, 0x85, 0xd1, 0xaf, 0x64, 0xdc, 0x1f, 0x21, 0x2d, 0x29, 0xac, 0x3e, 0x3b,
	0x63, 0xe3, 0x09, 0xd2, 0x71, 0x1d, 0x6a, 0xc3, 0xce, 0xf0, 0xbb, 0x35, 0x18, 0x50, 0x8e, 0xca,
	0xe6, 0x29, 0xd4, 0xd6, 0xa6, 0xb8, 0x02, 0xe5, 0xe1, 0x15, 0x41, 0x25, 0x7c, 0x00, 0xd5, 0x73,
	0xeb, 0x82, 0x0e, 0xaf, 0xc8, 0x07, 0xa4, 0xe5, 0xaa, 0x0e, 0xd2, 0xcd, 0x1e, 0x34, 0x54, 0x36,
	0x26, 0xc2, 0xbb, 0x95, 0x22, 0xff, 0x1a, 0x76, 0xa9, 0x94, 0x81, 0x54, 0xb4, 0x6b, 0x2c, 0x2d,
	0x32, 0x7c, 0xdf, 0x96, 0x42, 0xae, 0x98, 0xf8, 0x91, 0xc3, 0xf7, 0xd8, 0x32, 0x3f, 0xc1, 0x21,
	0xb9, 0x15, 0xb3, 0x39, 0x8f, 0xed, 0xc8, 0x89, 0x96, 0x0b, 0x65, 0xb6, 0x21, 0xd3, 0x9e, 0xca,
	0xfe, 0xe8, 0x70, 0x5c, 0xd0, 0xbd, 0x94, 0xe4, 0x1a, 0x8e, 0x78, 0x9c, 0x91, 0x4a, 0x15, 0x0a,
	0xb9, 0xae, 0x90, 0x9f, 0xfe, 0x47, 0xbe, 0xdd, 0xb4, 0xbd, 0xa1, 0x65, 0xdb, 0xcc, 0x92, 0x45,
	0xf3, 0xb8, 0xe7, 0x2c, 0x6e, 0xb3, 0x2b, 0xc8, 0x2a, 0xfc, 0x0e, 0x80, 0xc7, 0xb6, 0xf0, 0x23,
	0xee, 0x7a, 0x22, 0x3b, 0x82, 0x5c, 0x07, 0x7f, 0x06, 0x83, 0xc7, 0x23, 0x11, 0xfd, 0x0a, 0xe4,
	0x3c, 0xb5, 0x4b, 0x53, 0x24, 0xd3, 0xbb, 0x6a, 0xfa, 0xd9, 0x77, 0xb3, 0x0b, 0xaf, 0x36, 0xa2,
	0x24, 0xdb, 0xe5, 0xe3, 0x2e, 0x9d, 0xda, 0x74, 0x94, 0x9c, 0x01, 0x82, 0x03, 0x55, 0x92, 0x1e,
	0x25, 0x17, 0xf4, 0x0c, 0x69, 0xb8, 0x01, 0x60, 0x5f, 0x12, 0x42, 0x6d, 0xfb, 0xfc, 0x72, 0x80,
	0xf4, 0xce, 0x6f, 0x0d, 0x2a, 0x99, 0x05, 0xfe, 0x02, 0xa0, 0x6e, 0x41, 0xad, 0x17, 0x1f, 0x6d,
	0xb9, 0xc5, 0x13, 0x63, 0xa3, 0xb9, 0xa6, 0x64, 0x96, 0xf0, 0x04, 0xea, 0x05, 0x82, 0xf8, 0xcd,
	0x33, 0x68, 0x95, 0x53, 0xf3, 0x25, 0xee, 0x66, 0xe9, 0x7a, 0x4f, 0xfd, 0xf8, 0x8f, 0xff, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xbc, 0xfc, 0x70, 0xd5, 0x0f, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PaymentClient is the client API for Payment service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymentClient interface {
	TokenTxReq(ctx context.Context, in *TxReqType, opts ...grpc.CallOption) (*TxReqReplyType, error)
	CheckTxStatus(ctx context.Context, in *CheckTxStatusType, opts ...grpc.CallOption) (*CheckTxStatusReplyType, error)
}

type paymentClient struct {
	cc *grpc.ClientConn
}

func NewPaymentClient(cc *grpc.ClientConn) PaymentClient {
	return &paymentClient{cc}
}

func (c *paymentClient) TokenTxReq(ctx context.Context, in *TxReqType, opts ...grpc.CallOption) (*TxReqReplyType, error) {
	out := new(TxReqReplyType)
	err := c.cc.Invoke(ctx, "/grpc_api.Payment/TokenTxReq", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentClient) CheckTxStatus(ctx context.Context, in *CheckTxStatusType, opts ...grpc.CallOption) (*CheckTxStatusReplyType, error) {
	out := new(CheckTxStatusReplyType)
	err := c.cc.Invoke(ctx, "/grpc_api.Payment/CheckTxStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymentServer is the server API for Payment service.
type PaymentServer interface {
	TokenTxReq(context.Context, *TxReqType) (*TxReqReplyType, error)
	CheckTxStatus(context.Context, *CheckTxStatusType) (*CheckTxStatusReplyType, error)
}

func RegisterPaymentServer(s *grpc.Server, srv PaymentServer) {
	s.RegisterService(&_Payment_serviceDesc, srv)
}

func _Payment_TokenTxReq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxReqType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServer).TokenTxReq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_api.Payment/TokenTxReq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServer).TokenTxReq(ctx, req.(*TxReqType))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_CheckTxStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckTxStatusType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServer).CheckTxStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_api.Payment/CheckTxStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServer).CheckTxStatus(ctx, req.(*CheckTxStatusType))
	}
	return interceptor(ctx, in, info, handler)
}

var _Payment_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc_api.Payment",
	HandlerType: (*PaymentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TokenTxReq",
			Handler:    _Payment_TokenTxReq_Handler,
		},
		{
			MethodName: "CheckTxStatus",
			Handler:    _Payment_CheckTxStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc_payment_service.proto",
}
