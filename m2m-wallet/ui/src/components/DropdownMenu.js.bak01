import React, { Component } from 'react';
import Select from 'react-select';
import PropTypes from 'prop-types'
import ProfileStore from '../stores/ProfileStore'
import SessionStore from "../stores/SessionStore";

const getOrgList = (organizations) => {
    let organizationList = null;
    if(organizations){
        organizationList = organizations.map((o, i) => { 
        return {label: o.organizationName, value: o.organizationID}});
    }
    
    return organizationList;
};

const promiseOptions = () =>
  new Promise((resolve, reject) => {
    ProfileStore.getUserOrganizationList(SessionStore.getOrganizationID(),
      resp => {
        resolve(getOrgList(resp.organizations));
      })
  });

export default class DropdownMenu extends Component {

    constructor(props) {
        super(props);
        this.state = {
            selectedValue: '',
        };
        this.handleChange = this.handleChange.bind(this);

        this.options = props.options;

    }

    componentDidMount() {
        promiseOptions().then(options => {
            const sa = options.find(opt => opt.label.toLowerCase() === 'super_admin')
            console.log('options', options)
            return options
            /* this.setState({
                options,
                selectedValue: SessionStore.getOrganizationID() === "0"
                  ? options[2] : options[0]
            }) */
        })

        /* this.setState({
            selectedValue: this.props.defaultValue,
        }) */
    }

    handleChange(selectedOption) {
        this.setState({selectedValue: selectedOption.value});
    }

    render() {
        return (
            <Select
                value={this.options.filter(({value}) => value === this.state.selectedValue)}
                onChange={this.handleChange}
                options={this.options}
            />
        )
    }
}

DropdownMenu.propTypes = {
    defaultValue: PropTypes.string.isRequired
};