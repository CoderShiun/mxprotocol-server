// Code generated by protoc-gen-go. DO NOT EDIT.
// source: withdraw.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CryptoCurrencies int32

const (
	CryptoCurrencies_Ether CryptoCurrencies = 0
)

var CryptoCurrencies_name = map[int32]string{
	0: "Ether",
}

var CryptoCurrencies_value = map[string]int32{
	"Ether": 0,
}

func (x CryptoCurrencies) String() string {
	return proto.EnumName(CryptoCurrencies_name, int32(x))
}

func (CryptoCurrencies) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b0dd7acb611886fa, []int{0}
}

type GetWithdrawFeeRequest struct {
	// type of crypto currency
	CryptoCurrency       CryptoCurrencies `protobuf:"varint,1,opt,name=cryptoCurrency,proto3,enum=api.CryptoCurrencies" json:"cryptoCurrency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetWithdrawFeeRequest) Reset()         { *m = GetWithdrawFeeRequest{} }
func (m *GetWithdrawFeeRequest) String() string { return proto.CompactTextString(m) }
func (*GetWithdrawFeeRequest) ProtoMessage()    {}
func (*GetWithdrawFeeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0dd7acb611886fa, []int{0}
}

func (m *GetWithdrawFeeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWithdrawFeeRequest.Unmarshal(m, b)
}
func (m *GetWithdrawFeeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWithdrawFeeRequest.Marshal(b, m, deterministic)
}
func (m *GetWithdrawFeeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWithdrawFeeRequest.Merge(m, src)
}
func (m *GetWithdrawFeeRequest) XXX_Size() int {
	return xxx_messageInfo_GetWithdrawFeeRequest.Size(m)
}
func (m *GetWithdrawFeeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWithdrawFeeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWithdrawFeeRequest proto.InternalMessageInfo

func (m *GetWithdrawFeeRequest) GetCryptoCurrency() CryptoCurrencies {
	if m != nil {
		return m.CryptoCurrency
	}
	return CryptoCurrencies_Ether
}

type GetWithdrawFeeResponse struct {
	// Withdraw object.
	WithdrawFee          float64  `protobuf:"fixed64,1,opt,name=WithdrawFee,proto3" json:"WithdrawFee,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWithdrawFeeResponse) Reset()         { *m = GetWithdrawFeeResponse{} }
func (m *GetWithdrawFeeResponse) String() string { return proto.CompactTextString(m) }
func (*GetWithdrawFeeResponse) ProtoMessage()    {}
func (*GetWithdrawFeeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0dd7acb611886fa, []int{1}
}

func (m *GetWithdrawFeeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWithdrawFeeResponse.Unmarshal(m, b)
}
func (m *GetWithdrawFeeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWithdrawFeeResponse.Marshal(b, m, deterministic)
}
func (m *GetWithdrawFeeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWithdrawFeeResponse.Merge(m, src)
}
func (m *GetWithdrawFeeResponse) XXX_Size() int {
	return xxx_messageInfo_GetWithdrawFeeResponse.Size(m)
}
func (m *GetWithdrawFeeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWithdrawFeeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWithdrawFeeResponse proto.InternalMessageInfo

func (m *GetWithdrawFeeResponse) GetWithdrawFee() float64 {
	if m != nil {
		return m.WithdrawFee
	}
	return 0
}

func (m *GetWithdrawFeeResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterEnum("api.CryptoCurrencies", CryptoCurrencies_name, CryptoCurrencies_value)
	proto.RegisterType((*GetWithdrawFeeRequest)(nil), "api.GetWithdrawFeeRequest")
	proto.RegisterType((*GetWithdrawFeeResponse)(nil), "api.GetWithdrawFeeResponse")
}

func init() { proto.RegisterFile("withdraw.proto", fileDescriptor_b0dd7acb611886fa) }

var fileDescriptor_b0dd7acb611886fa = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0xcf, 0x2c, 0xc9,
	0x48, 0x29, 0x4a, 0x2c, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x94,
	0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb,
	0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0x28, 0x51, 0x0a, 0xe3, 0x12, 0x75, 0x4f, 0x2d,
	0x09, 0x87, 0xea, 0x73, 0x4b, 0x4d, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0xb2, 0xe5,
	0xe2, 0x4b, 0x2e, 0xaa, 0x2c, 0x28, 0xc9, 0x77, 0x2e, 0x2d, 0x2a, 0x4a, 0xcd, 0x4b, 0xae, 0x94,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x33, 0x12, 0xd5, 0x4b, 0x2c, 0xc8, 0xd4, 0x73, 0x46, 0x96, 0xca,
	0x4c, 0x2d, 0x0e, 0x42, 0x53, 0xac, 0x14, 0xc0, 0x25, 0x86, 0x6e, 0x6e, 0x71, 0x41, 0x7e, 0x5e,
	0x71, 0xaa, 0x90, 0x02, 0x17, 0x37, 0x92, 0x30, 0xd8, 0x54, 0xc6, 0x20, 0x64, 0x21, 0x21, 0x11,
	0x2e, 0x56, 0xd7, 0xa2, 0xa2, 0xfc, 0x22, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x08, 0x47,
	0x4b, 0x96, 0x4b, 0x00, 0xdd, 0x56, 0x21, 0x4e, 0x2e, 0x56, 0xd7, 0x92, 0x8c, 0xd4, 0x22, 0x01,
	0x06, 0xa3, 0x2e, 0x46, 0x2e, 0x7e, 0x98, 0x21, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42,
	0xe5, 0x5c, 0x7c, 0xa8, 0x8e, 0x10, 0x92, 0x02, 0xbb, 0x1e, 0xab, 0x8f, 0xa5, 0xa4, 0xb1, 0xca,
	0x41, 0x5c, 0xad, 0xa4, 0xd3, 0x74, 0xf9, 0xc9, 0x64, 0x26, 0x35, 0x21, 0x15, 0x70, 0x38, 0xa6,
	0xa3, 0x28, 0xd2, 0xaf, 0x46, 0xf5, 0x7c, 0x6d, 0x12, 0x1b, 0x38, 0x70, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xe3, 0xb7, 0x12, 0x65, 0x91, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WithdrawServiceClient is the client API for WithdrawService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WithdrawServiceClient interface {
	// Get data for current withdraw fee
	GetWithdrawFee(ctx context.Context, in *GetWithdrawFeeRequest, opts ...grpc.CallOption) (*GetWithdrawFeeResponse, error)
}

type withdrawServiceClient struct {
	cc *grpc.ClientConn
}

func NewWithdrawServiceClient(cc *grpc.ClientConn) WithdrawServiceClient {
	return &withdrawServiceClient{cc}
}

func (c *withdrawServiceClient) GetWithdrawFee(ctx context.Context, in *GetWithdrawFeeRequest, opts ...grpc.CallOption) (*GetWithdrawFeeResponse, error) {
	out := new(GetWithdrawFeeResponse)
	err := c.cc.Invoke(ctx, "/api.WithdrawService/GetWithdrawFee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WithdrawServiceServer is the server API for WithdrawService service.
type WithdrawServiceServer interface {
	// Get data for current withdraw fee
	GetWithdrawFee(context.Context, *GetWithdrawFeeRequest) (*GetWithdrawFeeResponse, error)
}

func RegisterWithdrawServiceServer(s *grpc.Server, srv WithdrawServiceServer) {
	s.RegisterService(&_WithdrawService_serviceDesc, srv)
}

func _WithdrawService_GetWithdrawFee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWithdrawFeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WithdrawServiceServer).GetWithdrawFee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WithdrawService/GetWithdrawFee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WithdrawServiceServer).GetWithdrawFee(ctx, req.(*GetWithdrawFeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WithdrawService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.WithdrawService",
	HandlerType: (*WithdrawServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetWithdrawFee",
			Handler:    _WithdrawService_GetWithdrawFee_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "withdraw.proto",
}
